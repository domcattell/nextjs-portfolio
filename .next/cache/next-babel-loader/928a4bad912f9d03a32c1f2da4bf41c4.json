{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport { GET_PROJECTS, GET_PROJECT, ADD_PROJECT, ADD_FAILED, DELETE_PROJECT, DELETE_FAILED, EDIT_PROJECT, EDIT_FAILED } from '../actions/types';\nimport projectsReducer from '../reducers/projects.reducer';\nimport axios from 'axios';\nexport const ProjectsContext = createContext();\nexport const ProjectsActions = createContext();\nexport const ProjectsProvider = props => {\n  const initState = {\n    projects: [],\n    project: null,\n    projectsMsg: \"\"\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(projectsReducer, initState);\n\n  const getProjects = async () => {\n    try {\n      const res = await axios.get('/api/projects', {\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addProject = async project => {\n    try {\n      const res = await axios.post('/api/projects/new', project);\n      dispatch({\n        type: ADD_PROJECT,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: ADD_FAILED,\n        payload: e.response.data\n      });\n    }\n  };\n\n  const actions = {\n    getProjects,\n    addProject\n  };\n  return __jsx(ProjectsContext.Provider, {\n    value: state\n  }, __jsx(ProjectsActions.Provider, {\n    value: actions\n  }, props.children));\n};","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/context/contexts/projects.context.js"],"names":["React","createContext","useReducer","GET_PROJECTS","GET_PROJECT","ADD_PROJECT","ADD_FAILED","DELETE_PROJECT","DELETE_FAILED","EDIT_PROJECT","EDIT_FAILED","projectsReducer","axios","ProjectsContext","ProjectsActions","ProjectsProvider","props","initState","projects","project","projectsMsg","state","dispatch","getProjects","res","get","headers","Accept","type","payload","data","e","console","log","addProject","post","response","actions","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SACCC,YADD,EAECC,WAFD,EAGCC,WAHD,EAICC,UAJD,EAKCC,cALD,EAMCC,aAND,EAOCC,YAPD,EAQCC,WARD,QASO,kBATP;AAUA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGZ,aAAa,EAArC;AACP,OAAO,MAAMa,eAAe,GAAGb,aAAa,EAArC;AAEP,OAAO,MAAMc,gBAAgB,GAAIC,KAAD,IAAW;AAC1C,QAAMC,SAAS,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,WAAW,EAAE;AAHI,GAAlB;AAMA,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBpB,UAAU,CAACS,eAAD,EAAkBM,SAAlB,CAAtC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC/B,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,eAAV,EAA2B;AAC5CC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AADmC,OAA3B,CAAlB;AAGAL,MAAAA,QAAQ,CAAC;AACRM,QAAAA,IAAI,EAAEzB,YADE;AAER0B,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,OAAD,CAAR;AAIA,KARD,CAQE,OAAOC,CAAP,EAAU;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA;AACD,GAZD;;AAcA,QAAMG,UAAU,GAAG,MAAOf,OAAP,IAAmB;AACrC,QAAI;AACH,YAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACuB,IAAN,CAAW,mBAAX,EAAgChB,OAAhC,CAAlB;AACAG,MAAAA,QAAQ,CAAC;AACRM,QAAAA,IAAI,EAAEvB,WADE;AAERwB,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,OAAD,CAAR;AAIA,KAND,CAME,OAAOC,CAAP,EAAU;AACXT,MAAAA,QAAQ,CAAC;AACRM,QAAAA,IAAI,EAAEtB,UADE;AAERuB,QAAAA,OAAO,EAAEE,CAAC,CAACK,QAAF,CAAWN;AAFZ,OAAD,CAAR;AAIA;AACD,GAbD;;AAiBA,QAAMO,OAAO,GAAG;AACfd,IAAAA,WADe;AAEfW,IAAAA;AAFe,GAAhB;AAKA,SACC,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEb;AAAjC,KACC,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEgB;AAAjC,KAA2CrB,KAAK,CAACsB,QAAjD,CADD,CADD;AAKA,CAlDM","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport {\r\n\tGET_PROJECTS,\r\n\tGET_PROJECT,\r\n\tADD_PROJECT,\r\n\tADD_FAILED,\r\n\tDELETE_PROJECT,\r\n\tDELETE_FAILED,\r\n\tEDIT_PROJECT,\r\n\tEDIT_FAILED\r\n} from '../actions/types';\r\nimport projectsReducer from '../reducers/projects.reducer';\r\nimport axios from 'axios';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsActions = createContext();\r\n\r\nexport const ProjectsProvider = (props) => {\r\n\tconst initState = {\r\n\t\tprojects: [],\r\n\t\tproject: null,\r\n\t\tprojectsMsg: \"\"\r\n\t};\r\n\r\n\tconst [ state, dispatch ] = useReducer(projectsReducer, initState);\r\n\r\n\tconst getProjects = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get('/api/projects', {\r\n\t\t\t\theaders: { Accept: 'application/json' }\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECTS,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addProject = async (project) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post('/api/projects/new', project);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\r\n\tconst actions = {\r\n\t\tgetProjects,\r\n\t\taddProject\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ProjectsContext.Provider value={state}>\r\n\t\t\t<ProjectsActions.Provider value={actions}>{props.children}</ProjectsActions.Provider>\r\n\t\t</ProjectsContext.Provider>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}