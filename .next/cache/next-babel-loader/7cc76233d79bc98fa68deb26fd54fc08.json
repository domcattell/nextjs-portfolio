{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport { GET_PROJECTS, GET_PROJECT, ADD_PROJECT, ADD_FAILED, DELETE_PROJECT, DELETE_FAILED, EDIT_PROJECT, EDIT_FAILED, CLEAR_MSG, GET_PROJECTS_FAILED, GET_PROJECT_FAILED, CLEAR_PROJECT } from '../actions/types';\nimport projectsReducer from '../reducers/projects.reducer';\nimport axios from 'axios';\nexport var ProjectsContext = createContext();\nexport var ProjectsActions = createContext();\nexport var ProjectsProvider = function ProjectsProvider(props) {\n  var initState = {\n    projects: [],\n    project: null,\n    projectsMsg: ''\n  };\n\n  var _useReducer = useReducer(projectsReducer, initState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var getProjects = function getProjects() {\n    var res;\n    return _regeneratorRuntime.async(function getProjects$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get('/api/projects', {\n              headers: {\n                Accept: 'application/json'\n              }\n            }));\n\n          case 3:\n            res = _context.sent;\n            dispatch({\n              type: GET_PROJECTS,\n              payload: res.data\n            });\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: GET_PROJECTS_FAILED,\n              payload: _context.t0.response.data\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getProject = function getProject(projectURL) {\n    var res;\n    return _regeneratorRuntime.async(function getProject$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"/api/projects/\".concat(projectURL)));\n\n          case 3:\n            res = _context2.sent;\n            dispatch({\n              type: GET_PROJECT,\n              payload: res.data\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: GET_PROJECT_FAILED,\n              payload: _context2.t0.response.data\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var addProject = function addProject(project) {\n    var res;\n    return _regeneratorRuntime.async(function addProject$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('/api/projects/new', project));\n\n          case 3:\n            res = _context3.sent;\n            dispatch({\n              type: ADD_PROJECT,\n              payload: res.data\n            });\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: ADD_FAILED,\n              payload: _context3.t0.response.data\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var editProject = function editProject(project) {\n    var res;\n    return _regeneratorRuntime.async(function editProject$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"/api/project/\".concat(projectURL), project));\n\n          case 3:\n            res = _context4.sent;\n            dispatch({\n              type: EDIT_PROJECT,\n              payload: res.data\n            });\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            dispatch({\n              type: EDIT_FAILED,\n              payload: _context4.t0.response.data\n            });\n\n          case 10:\n            ;\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var clearProjectMsg = function clearProjectMsg() {\n    dispatch({\n      type: CLEAR_MSG\n    });\n  };\n\n  var clearProject = function clearProject() {\n    dispatch({\n      type: CLEAR_PROJECT\n    });\n  };\n\n  var actions = {\n    getProjects: getProjects,\n    getProject: getProject,\n    addProject: addProject,\n    editProject: editProject,\n    clearProjectMsg: clearProjectMsg,\n    clearProject: clearProject\n  };\n  return __jsx(ProjectsContext.Provider, {\n    value: state\n  }, __jsx(ProjectsActions.Provider, {\n    value: actions\n  }, props.children));\n};","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/context/contexts/projects.context.js"],"names":["React","createContext","useReducer","GET_PROJECTS","GET_PROJECT","ADD_PROJECT","ADD_FAILED","DELETE_PROJECT","DELETE_FAILED","EDIT_PROJECT","EDIT_FAILED","CLEAR_MSG","GET_PROJECTS_FAILED","GET_PROJECT_FAILED","CLEAR_PROJECT","projectsReducer","axios","ProjectsContext","ProjectsActions","ProjectsProvider","props","initState","projects","project","projectsMsg","state","dispatch","getProjects","get","headers","Accept","res","type","payload","data","response","getProject","projectURL","addProject","post","editProject","clearProjectMsg","clearProject","actions","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport {\r\n\tGET_PROJECTS,\r\n\tGET_PROJECT,\r\n\tADD_PROJECT,\r\n\tADD_FAILED,\r\n\tDELETE_PROJECT,\r\n\tDELETE_FAILED,\r\n\tEDIT_PROJECT,\r\n\tEDIT_FAILED,\r\n\tCLEAR_MSG,\r\n\tGET_PROJECTS_FAILED,\r\n\tGET_PROJECT_FAILED,\r\n\tCLEAR_PROJECT\r\n} from '../actions/types';\r\nimport projectsReducer from '../reducers/projects.reducer';\r\nimport axios from 'axios';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsActions = createContext();\r\n\r\nexport const ProjectsProvider = (props) => {\r\n\tconst initState = {\r\n\t\tprojects: [],\r\n\t\tproject: null,\r\n\t\tprojectsMsg: ''\r\n\t};\r\n\r\n\tconst [ state, dispatch ] = useReducer(projectsReducer, initState);\r\n\r\n\tconst getProjects = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get('/api/projects', {\r\n\t\t\t\theaders: { Accept: 'application/json' }\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECTS,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECTS_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProject = async (projectURL) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`/api/projects/${projectURL}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECT_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst addProject = async (project) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post('/api/projects/new', project);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst editProject = async (project) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(`/api/project/${projectURL}`, project);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_PROJECT,\r\n\t\t\t\tpayload: res.data,\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_FAILED,\r\n\t\t\t\tpayload: err.response.data\r\n\t\t\t});\r\n\t\t};\r\n\t};\r\n\r\n\tconst clearProjectMsg = () => {\r\n\t\tdispatch({ type: CLEAR_MSG });\r\n\t};\r\n\r\n\tconst clearProject = () => {\r\n\t\tdispatch({type: CLEAR_PROJECT})\r\n\t}\r\n\r\n\tconst actions = {\r\n\t\tgetProjects,\r\n\t\tgetProject,\r\n\t\taddProject,\r\n\t\teditProject,\r\n\t\tclearProjectMsg,\r\n\t\tclearProject,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ProjectsContext.Provider value={state}>\r\n\t\t\t<ProjectsActions.Provider value={actions}>{props.children}</ProjectsActions.Provider>\r\n\t\t</ProjectsContext.Provider>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}