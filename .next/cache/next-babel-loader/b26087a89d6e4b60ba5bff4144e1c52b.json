{"ast":null,"code":"var express = require('express'),\n    router = express.Router({\n  mergeParams: true\n}),\n    projects = require('../models/projects'),\n    checkAuth = require('../middleware/checkAuth'); //get all projects\n\n\nrouter.get('/projects', function (req, res) {\n  projects.find({}, function (err, projects) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.status(200).json(projects);\n    }\n\n    ;\n  });\n}); //get single project\n\nrouter.get('/projects/:id', function (req, res) {\n  var id = req.params.id;\n  projects.findById(id, function (err, foundProject) {\n    if (err) {\n      res.status(403).json({\n        msg: \"something went wrong fetching this project\"\n      });\n    } else {\n      res.status(200).json(foundProject);\n    }\n\n    ;\n  });\n}); ////////////////////////////////\n//**admin access only routes**//\n///////////////////////////////\n//add new project\n\nrouter.post('/projects/new', checkAuth, function (req, res) {\n  var _req$body = req.body,\n      title = _req$body.title,\n      description = _req$body.description,\n      code = _req$body.code,\n      demo = _req$body.demo,\n      created = _req$body.created; //save body to object to send to client\n\n  var newProject = {\n    title: title,\n    description: description,\n    code: code,\n    demo: demo,\n    created: created\n  }; //add new project to db\n\n  projects.create(newProject, function (err, addedProject) {\n    if (err) {\n      res.status(403).json({\n        msg: \"Error occurred adding project\"\n      });\n    } else {\n      res.status(200).json(newProject);\n    }\n\n    ;\n  });\n}); //update project\n\nrouter.put('/projects/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body2 = req.body,\n      title = _req$body2.title,\n      description = _req$body2.description,\n      code = _req$body2.code,\n      demo = _req$body2.demo,\n      created = _req$body2.created;\n  var updateProject = {\n    title: title,\n    description: description,\n    code: code,\n    demo: demo,\n    created: created\n  };\n  projects.findByIdAndUpdate(id, updateProject, function (err, updatedDeal) {\n    if (err) {\n      res.status(403).json({\n        msg: \"Something went wrong updating this project\"\n      });\n    } else {\n      res.status(200).json(updatedDeal);\n    }\n\n    ;\n  });\n}); //delete project\n\nrouter[\"delete\"]('/projects/:id', function (req, res) {\n  var id = req.params.id;\n  projects.findByIdAndRemove(id, function (err) {\n    if (err) {\n      res.status(403).json({\n        msg: \"Error removing project\"\n      });\n    } else {\n      res.status(200);\n    }\n\n    ;\n  });\n});\nmodule.exports = router;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/server/routes/projectRoutes.js"],"names":["express","require","router","Router","mergeParams","projects","checkAuth","get","req","res","find","err","console","log","status","json","id","params","findById","foundProject","msg","post","body","title","description","code","demo","created","newProject","create","addedProject","put","updateProject","findByIdAndUpdate","updatedDeal","findByIdAndRemove","module","exports"],"mappings":"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","sourcesContent":["const\r\n    express = require('express'),\r\n    router = express.Router({ mergeParams: true }),\r\n    projects = require('../models/projects'),\r\n    checkAuth = require('../middleware/checkAuth');\r\n\r\n//get all projects\r\nrouter.get('/projects', (req, res) => {\r\n    projects.find({}, (err, projects) => {\r\n        if (err) {\r\n            console.log(err);\r\n        } else {\r\n            res.status(200).json(projects);\r\n        };\r\n    });\r\n});\r\n\r\n//get single project\r\nrouter.get('/projects/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    projects.findById(id, (err, foundProject) => {\r\n        if (err) {\r\n            res.status(403).json({ msg: \"something went wrong fetching this project\" });\r\n        } else {\r\n            res.status(200).json(foundProject);\r\n        };\r\n    });\r\n});\r\n\r\n////////////////////////////////\r\n//**admin access only routes**//\r\n///////////////////////////////\r\n\r\n//add new project\r\nrouter.post('/projects/new', checkAuth, (req, res) => {\r\n    const { title, description, code, demo, created } = req.body;\r\n    //save body to object to send to client\r\n    const newProject = {\r\n        title: title,\r\n        description: description,\r\n        code: code,\r\n        demo: demo,\r\n        created: created\r\n    }\r\n\r\n    //add new project to db\r\n    projects.create(newProject, (err, addedProject) => {\r\n        if (err) {\r\n            res.status(403).json({ msg: \"Error occurred adding project\" });\r\n        } else {\r\n            res.status(200).json(newProject);\r\n        };\r\n    });\r\n});\r\n\r\n//update project\r\nrouter.put('/projects/:id', (req, res) => {\r\n    const { id } = req.params;\r\n    const { title, description, code, demo, created } = req.body;\r\n    const updateProject = {\r\n        title: title,\r\n        description: description,\r\n        code: code,\r\n        demo: demo,\r\n        created: created\r\n    };\r\n\r\n    projects.findByIdAndUpdate(id, updateProject, (err, updatedDeal) => {\r\n        if (err) {\r\n            res.status(403).json({ msg: \"Something went wrong updating this project\" });\r\n        } else {\r\n            res.status(200).json(updatedDeal);\r\n        };\r\n    });\r\n});\r\n\r\n//delete project\r\nrouter.delete('/projects/:id', (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    projects.findByIdAndRemove(id, (err) => {\r\n        if (err) {\r\n            res.status(403).json({ msg: \"Error removing project\" });\r\n        } else {\r\n            res.status(200);\r\n        };\r\n    });\r\n});\r\n\r\nmodule.exports = router;"]},"metadata":{},"sourceType":"script"}