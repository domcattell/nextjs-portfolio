{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport { GET_PROJECTS, GET_PROJECT, ADD_PROJECT, ADD_FAILED, DELETE_PROJECT, DELETE_FAILED, EDIT_PROJECT, EDIT_FAILED, CLEAR_MSG, GET_PROJECTS_FAILED, GET_PROJECT_FAILED, CLEAR_PROJECT, PROJECT_LOADING } from '../actions/types';\nimport projectsReducer from '../reducers/projects.reducer';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const ProjectsContext = createContext();\nexport const ProjectsActions = createContext();\nexport const ProjectsProvider = props => {\n  const initState = {\n    projects: [],\n    project: {},\n    projectsMsg: '',\n    loading: true\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(projectsReducer, initState);\n\n  const getProjects = async () => {\n    try {\n      const res = await axios.get('/api/projects', {\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: GET_PROJECTS_FAILED,\n        payload: e.response.data\n      });\n    }\n  };\n\n  const getProject = async projectURL => {\n    try {\n      const res = await axios.get(`/api/projects/${projectURL}`);\n      dispatch({\n        type: GET_PROJECT,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: GET_PROJECT_FAILED,\n        payload: e.response.data\n      });\n    }\n  };\n\n  const addProject = async project => {\n    try {\n      const res = await axios.post('/api/projects/new', project);\n      dispatch({\n        type: ADD_PROJECT,\n        payload: res.data\n      });\n    } catch (e) {\n      toast.error(`error: ${e.response.data}`);\n      dispatch({\n        type: ADD_FAILED,\n        payload: e.response.data\n      });\n      console.log(`error: ${e.response.data}`);\n    }\n  };\n\n  const editProject = async (projectURL, project) => {\n    try {\n      const res = await axios.put(`/api/projects/${projectURL}`, project);\n      dispatch({\n        type: EDIT_PROJECT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: EDIT_FAILED,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const deleteProject = async projectURL => {\n    try {\n      await axios.delete(`/api/projects/${projectURL}`);\n      dispatch({\n        type: DELETE_PROJECT,\n        payload: projectURL\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_FAILED,\n        payload: err.response.data\n      });\n    }\n  };\n\n  const clearProjectMsg = () => {\n    dispatch({\n      type: CLEAR_MSG\n    });\n  };\n\n  const clearProject = () => {\n    dispatch({\n      type: CLEAR_PROJECT\n    });\n  };\n\n  const loadingProject = () => dispatch({\n    type: PROJECT_LOADING\n  });\n\n  const actions = {\n    getProjects,\n    getProject,\n    addProject,\n    editProject,\n    deleteProject,\n    clearProjectMsg,\n    clearProject,\n    loadingProject\n  };\n  return __jsx(ProjectsContext.Provider, {\n    value: state\n  }, __jsx(ProjectsActions.Provider, {\n    value: actions\n  }, props.children));\n};","map":{"version":3,"sources":["C:/users/domin/documents/domcattell/site/context/contexts/projects.context.js"],"names":["React","createContext","useReducer","GET_PROJECTS","GET_PROJECT","ADD_PROJECT","ADD_FAILED","DELETE_PROJECT","DELETE_FAILED","EDIT_PROJECT","EDIT_FAILED","CLEAR_MSG","GET_PROJECTS_FAILED","GET_PROJECT_FAILED","CLEAR_PROJECT","PROJECT_LOADING","projectsReducer","axios","toast","ProjectsContext","ProjectsActions","ProjectsProvider","props","initState","projects","project","projectsMsg","loading","state","dispatch","getProjects","res","get","headers","Accept","type","payload","data","e","response","getProject","projectURL","addProject","post","error","console","log","editProject","put","err","deleteProject","delete","clearProjectMsg","clearProject","loadingProject","actions","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport {\r\n\tGET_PROJECTS,\r\n\tGET_PROJECT,\r\n\tADD_PROJECT,\r\n\tADD_FAILED,\r\n\tDELETE_PROJECT,\r\n\tDELETE_FAILED,\r\n\tEDIT_PROJECT,\r\n\tEDIT_FAILED,\r\n\tCLEAR_MSG,\r\n\tGET_PROJECTS_FAILED,\r\n\tGET_PROJECT_FAILED,\r\n\tCLEAR_PROJECT,\r\n\tPROJECT_LOADING\r\n} from '../actions/types';\r\nimport projectsReducer from '../reducers/projects.reducer';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsActions = createContext();\r\n\r\nexport const ProjectsProvider = (props) => {\r\n\tconst initState = {\r\n\t\tprojects: [],\r\n\t\tproject: {},\r\n\t\tprojectsMsg: '',\r\n\t\tloading: true\r\n\t};\r\n\r\n\tconst [ state, dispatch ] = useReducer(projectsReducer, initState);\r\n\r\n\tconst getProjects = async () => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get('/api/projects', {\r\n\t\t\t\theaders: { Accept: 'application/json' }\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECTS,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECTS_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst getProject = async (projectURL) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`/api/projects/${projectURL}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROJECT_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst addProject = async (project) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post('/api/projects/new', project);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\ttoast.error(`error: ${e.response.data}`)\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ADD_FAILED,\r\n\t\t\t\tpayload: e.response.data\r\n\t\t\t});\r\n\t\t\tconsole.log(`error: ${e.response.data}`)\r\n\t\t}\r\n\t};\r\n\r\n\tconst editProject = async (projectURL, project) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.put(`/api/projects/${projectURL}`, project);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_PROJECT,\r\n\t\t\t\tpayload: res.data\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EDIT_FAILED,\r\n\t\t\t\tpayload: err.response.data,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteProject = async (projectURL) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`/api/projects/${projectURL}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_PROJECT,\r\n\t\t\t\tpayload: projectURL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DELETE_FAILED,\r\n\t\t\t\tpayload: err.response.data\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst clearProjectMsg = () => {\r\n\t\tdispatch({ type: CLEAR_MSG });\r\n\t};\r\n\r\n\tconst clearProject = () => {\r\n\t\tdispatch({ type: CLEAR_PROJECT });\r\n\t};\r\n\r\n\tconst loadingProject = () => dispatch({ type: PROJECT_LOADING });\r\n\r\n\tconst actions = {\r\n\t\tgetProjects,\r\n\t\tgetProject,\r\n\t\taddProject,\r\n\t\teditProject,\r\n\t\tdeleteProject,\r\n\t\tclearProjectMsg,\r\n\t\tclearProject,\r\n\t\tloadingProject\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ProjectsContext.Provider value={state}>\r\n\t\t\t<ProjectsActions.Provider value={actions}>{props.children}</ProjectsActions.Provider>\r\n\t\t</ProjectsContext.Provider>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}