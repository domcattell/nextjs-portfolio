{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport authReducer from '../reducers/auth.reducer';\nimport { LOGIN_SUCCESS, LOGIN_ERROR, AUTH_ERROR, CLEAR_MSGS, LOGOUT, AUTH_SUCCESS } from '../actions/types';\nexport const AuthContext = createContext();\nexport const AuthActions = createContext();\nexport const AuthProvider = props => {\n  const init = {\n    loadingAuth: false,\n    user: \"\",\n    isAuthenticated: false,\n    authMsgs: \"\"\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, init);\n\n  const checkAuth = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3000/api/admin/user\");\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: e.response.data\n      });\n    }\n\n    ;\n  };\n\n  const loginUser = async user => {\n    try {\n      const res = await axios.post(\"http://localhost:3000/api/admin/login\", user);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } catch (e) {\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: e.response.data\n      });\n    }\n\n    ;\n  };\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  });\n\n  const clearMsgs = () => dispatch({\n    type: CLEAR_MSGS\n  });\n\n  const actions = {\n    checkAuth,\n    loginUser,\n    logout,\n    clearMsgs\n  };\n  return __jsx(AuthContext.Provider, {\n    value: state\n  }, __jsx(AuthActions.Provider, {\n    value: actions\n  }, props.children));\n};","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/context/contexts/auth.context.js"],"names":["React","createContext","useReducer","axios","authReducer","LOGIN_SUCCESS","LOGIN_ERROR","AUTH_ERROR","CLEAR_MSGS","LOGOUT","AUTH_SUCCESS","AuthContext","AuthActions","AuthProvider","props","init","loadingAuth","user","isAuthenticated","authMsgs","state","dispatch","checkAuth","res","get","type","payload","data","e","response","loginUser","post","logout","clearMsgs","actions","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SACIC,aADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,YANJ,QAOO,kBAPP;AASA,OAAO,MAAMC,WAAW,GAAGV,aAAa,EAAjC;AACP,OAAO,MAAMW,WAAW,GAAGX,aAAa,EAAjC;AAEP,OAAO,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAEnC,QAAMC,IAAI,GAAG;AACTC,IAAAA,WAAW,EAAE,KADJ;AAETC,IAAAA,IAAI,EAAE,EAFG;AAGTC,IAAAA,eAAe,EAAE,KAHR;AAITC,IAAAA,QAAQ,EAAE;AAJD,GAAb;AAOA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBnB,UAAU,CAACE,WAAD,EAAcW,IAAd,CAApC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,sCAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEf,YADD;AAELgB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,CAAP,EAAU;AACRP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAElB,UADD;AAELmB,QAAAA,OAAO,EAAEE,CAAC,CAACC,QAAF,CAAWF;AAFf,OAAD,CAAR;AAIH;;AAAA;AACJ,GAbD;;AAeA,QAAMG,SAAS,GAAG,MAAOb,IAAP,IAAgB;AAC9B,QAAI;AACA,YAAMM,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAN,CAAW,uCAAX,EAAoDd,IAApD,CAAlB;AACAI,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEpB,aADD;AAELqB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,CAAP,EAAU;AACRP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEnB,WADD;AAELoB,QAAAA,OAAO,EAAEE,CAAC,CAACC,QAAF,CAAWF;AAFf,OAAD,CAAR;AAIH;;AAAA;AACJ,GAbD;;AAeA,QAAMK,MAAM,GAAG,MAAMX,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAEhB;AAAP,GAAD,CAA7B;;AACA,QAAMwB,SAAS,GAAG,MAAMZ,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAEjB;AAAP,GAAD,CAAhC;;AAEA,QAAM0B,OAAO,GAAG;AACZZ,IAAAA,SADY;AAEZQ,IAAAA,SAFY;AAGZE,IAAAA,MAHY;AAIZC,IAAAA;AAJY,GAAhB;AAOA,SACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEb;AAA7B,KACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEc;AAA7B,KACKpB,KAAK,CAACqB,QADX,CADJ,CADJ;AAOH,CA1DM","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport authReducer from '../reducers/auth.reducer';\r\nimport {\r\n    LOGIN_SUCCESS, \r\n    LOGIN_ERROR, \r\n    AUTH_ERROR, \r\n    CLEAR_MSGS, \r\n    LOGOUT,\r\n    AUTH_SUCCESS\r\n} from '../actions/types';\r\n\r\nexport const AuthContext = createContext();\r\nexport const AuthActions = createContext();\r\n\r\nexport const AuthProvider = (props) => {\r\n\r\n    const init = {\r\n        loadingAuth: false,\r\n        user: \"\",\r\n        isAuthenticated: false,\r\n        authMsgs: \"\"\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(authReducer, init);\r\n\r\n    const checkAuth = async () => {\r\n        try {\r\n            const res = await axios.get(\"http://localhost:3000/api/admin/user\");\r\n            dispatch({\r\n                type: AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (e) {\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: e.response.data\r\n            });\r\n        };\r\n    };\r\n\r\n    const loginUser = async (user) => {\r\n        try {\r\n            const res = await axios.post(\"http://localhost:3000/api/admin/login\", user);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (e) {\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: e.response.data\r\n            });\r\n        };\r\n    };\r\n\r\n    const logout = () => dispatch({type: LOGOUT});\r\n    const clearMsgs = () => dispatch({type: CLEAR_MSGS});\r\n\r\n    const actions = {\r\n        checkAuth,\r\n        loginUser,\r\n        logout,\r\n        clearMsgs\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={state}>\r\n            <AuthActions.Provider value={actions}>\r\n                {props.children}\r\n            </AuthActions.Provider>\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}