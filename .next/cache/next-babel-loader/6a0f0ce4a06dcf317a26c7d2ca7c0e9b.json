{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_PROJECTS, GET_PROJECT } from '../actions/types';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return _objectSpread({}, state, {\n        projects: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/context/reducers/projects.reducer.js"],"names":["GET_PROJECTS","GET_PROJECT","reducer","state","action","type","projects","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,YAAL;AACI,+BACOG,KADP;AAEIG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFrB;;AAKJ;AACI,aAAOJ,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["import { GET_PROJECTS, GET_PROJECT } from '../actions/types';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}