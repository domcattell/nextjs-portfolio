{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\n\nvar useInputState = function useInputState(init) {\n  var _useState = useState(init),\n      newValue = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValue(function (prev) {\n      return _objectSpread({}, prev, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleQuillChange = function handleQuillChange(value) {\n    setValue(function (prev) {\n      return _objectSpread({}, prev, {\n        description: value\n      });\n    });\n  };\n\n  var handleFileChange = function handleFileChange(e) {\n    e.persist();\n    setValue(function (prev) {\n      return _objectSpread({}, prev, {\n        projectImg: e.target.files[0]\n      });\n    });\n  };\n\n  var reset = function reset() {\n    setValue(init);\n  };\n\n  var currentData = function currentData(init) {\n    setValue(init);\n  };\n\n  return [newValue, handleChange, handleQuillChange, reset, handleFileChange, currentData];\n};\n\nexport default useInputState;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/hooks/useInputState.js"],"names":["useState","useInputState","init","newValue","setValue","handleChange","e","target","name","value","prev","handleQuillChange","description","handleFileChange","persist","projectImg","files","reset","currentData"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAAA,kBACAF,QAAQ,CAACE,IAAD,CADR;AAAA,MACvBC,QADuB;AAAA,MACbC,QADa;;AAG/B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACHA,CAAC,CAACC,MADC;AAAA,QACnBC,IADmB,aACnBA,IADmB;AAAA,QACbC,KADa,aACbA,KADa;AAE3BL,IAAAA,QAAQ,CAAC,UAACM,IAAD;AAAA,+BACLA,IADK,sBAEPF,IAFO,EAEAC,KAFA;AAAA,KAAD,CAAR;AAIA,GAND;;AAQA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,KAAD,EAAW;AACpCL,IAAAA,QAAQ,CAAC,UAACM,IAAD;AAAA,+BACLA,IADK;AAERE,QAAAA,WAAW,EAAEH;AAFL;AAAA,KAAD,CAAR;AAIA,GALD;;AAOA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,CAAD,EAAO;AAC/BA,IAAAA,CAAC,CAACQ,OAAF;AACAV,IAAAA,QAAQ,CAAC,UAACM,IAAD;AAAA,+BACLA,IADK;AAERK,QAAAA,UAAU,EAAET,CAAC,CAACC,MAAF,CAASS,KAAT,CAAe,CAAf;AAFJ;AAAA,KAAD,CAAR;AAIA,GAND;;AAQA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnBb,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACA,GAFD;;AAIA,MAAMgB,WAAW,GAAG,SAAdA,WAAc,CAAChB,IAAD,EAAU;AAC7BE,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACA,GAFD;;AAIA,SAAO,CAAEC,QAAF,EAAYE,YAAZ,EAA0BM,iBAA1B,EAA6CM,KAA7C,EAAoDJ,gBAApD,EAAsEK,WAAtE,CAAP;AACA,CAnCD;;AAqCA,eAAejB,aAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useInputState = (init) => {\r\n\tconst [ newValue, setValue ] = useState(init);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetValue((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[name]: value\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleQuillChange = (value) => {\r\n\t\tsetValue((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tdescription: value\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleFileChange = (e) => {\r\n\t\te.persist();\r\n\t\tsetValue((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tprojectImg: e.target.files[0]\r\n\t\t}));\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetValue(init);\r\n\t};\r\n\r\n\tconst currentData = (init) => {\r\n\t\tsetValue(init);\r\n\t};\r\n\r\n\treturn [ newValue, handleChange, handleQuillChange, reset, handleFileChange, currentData ];\r\n};\r\n\r\nexport default useInputState;\r\n"]},"metadata":{},"sourceType":"module"}