{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\n\nvar useInputState = function useInputState(init) {\n  var _useState = useState(init),\n      newValue = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setValue(function (prev) {\n      return _objectSpread({}, prev, _defineProperty({}, name, value));\n    });\n  };\n\n  var handleQuillChange = function handleQuillChange(value) {\n    setValue(function (prev) {\n      return _objectSpread({}, prev, {\n        description: value\n      });\n    });\n  };\n\n  var handleFileChange = function handleFileChange(e) {\n    e.preventDefault(); // setValue(prev => ({\n    //     ...prev,\n    //     projectImg: e.target.files[0]\n    // }))\n\n    setValue({\n      projectImg: e.target.files[0]\n    });\n  };\n\n  var reset = function reset() {\n    setValue(init);\n  };\n\n  return [newValue, handleChange, handleQuillChange, reset, handleFileChange];\n};\n\nexport default useInputState;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/hooks/useInputState.js"],"names":["useState","useInputState","init","newValue","setValue","handleChange","e","target","name","value","prev","handleQuillChange","description","handleFileChange","preventDefault","projectImg","files","reset"],"mappings":";;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAAA,kBACCF,QAAQ,CAACE,IAAD,CADT;AAAA,MACrBC,QADqB;AAAA,MACXC,QADW;;AAG5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACFA,CAAC,CAACC,MADA;AAAA,QACjBC,IADiB,aACjBA,IADiB;AAAA,QACXC,KADW,aACXA,KADW;AAExBL,IAAAA,QAAQ,CAAC,UAAAM,IAAI;AAAA,+BACNA,IADM,sBAERF,IAFQ,EAEDC,KAFC;AAAA,KAAL,CAAR;AAIH,GAND;;AAQA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,KAAD,EAAW;AACjCL,IAAAA,QAAQ,CAAC,UAAAM,IAAI;AAAA,+BACNA,IADM;AAETE,QAAAA,WAAW,EAAEH;AAFJ;AAAA,KAAL,CAAR;AAIH,GALD;;AAOA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACQ,cAAF,GAD4B,CAE5B;AACA;AACA;AACA;;AACAV,IAAAA,QAAQ,CAAC;AAACW,MAAAA,UAAU,EAAET,CAAC,CAACC,MAAF,CAASS,KAAT,CAAe,CAAf;AAAb,KAAD,CAAR;AACH,GAPD;;AASA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBb,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACH,GAFD;;AAIA,SAAO,CAACC,QAAD,EAAWE,YAAX,EAAyBM,iBAAzB,EAA4CM,KAA5C,EAAmDJ,gBAAnD,CAAP;AACH,CAhCD;;AAkCA,eAAeZ,aAAf","sourcesContent":["import {useState} from 'react';\r\n\r\nconst useInputState = (init) => {\r\n    const [newValue, setValue] = useState(init);\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setValue(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleQuillChange = (value) => {\r\n        setValue(prev => ({\r\n            ...prev,\r\n            description: value\r\n        }))\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        e.preventDefault();\r\n        // setValue(prev => ({\r\n        //     ...prev,\r\n        //     projectImg: e.target.files[0]\r\n        // }))\r\n        setValue({projectImg: e.target.files[0]});\r\n    };\r\n\r\n    const reset = () => {\r\n        setValue(init);\r\n    };\r\n    \r\n    return [newValue, handleChange, handleQuillChange, reset, handleFileChange];\r\n}\r\n\r\nexport default useInputState;"]},"metadata":{},"sourceType":"module"}