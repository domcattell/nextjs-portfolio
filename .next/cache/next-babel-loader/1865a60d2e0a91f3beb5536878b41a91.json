{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\n\nconst useInputState = init => {\n  const {\n    0: newValue,\n    1: setValue\n  } = useState(init);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValue(prev => _objectSpread({}, prev, {\n      [name]: value\n    }));\n  };\n\n  const handleQuillChange = value => {\n    setValue(prev => _objectSpread({}, prev, {\n      description: value\n    }));\n  };\n\n  const handleFileChange = e => {\n    setValue(prev => _objectSpread({}, prev, {\n      projectImg: e.target.files[0]\n    })); // setValue({ projectImg: e.target.files[0] });\n  };\n\n  const reset = () => {\n    setValue(init);\n  };\n\n  return [newValue, handleChange, handleQuillChange, reset, handleFileChange];\n};\n\nexport default useInputState;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/hooks/useInputState.js"],"names":["useState","useInputState","init","newValue","setValue","handleChange","e","name","value","target","prev","handleQuillChange","description","handleFileChange","projectImg","files","reset"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC/B,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAAyBJ,QAAQ,CAACE,IAAD,CAAvC;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,QAAQ,CAAEM,IAAD,sBACLA,IADK;AAER,OAACH,IAAD,GAAQC;AAFA,MAAD,CAAR;AAIA,GAND;;AAQA,QAAMG,iBAAiB,GAAIH,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAEM,IAAD,sBACLA,IADK;AAERE,MAAAA,WAAW,EAAEJ;AAFL,MAAD,CAAR;AAIA,GALD;;AAOA,QAAMK,gBAAgB,GAAIP,CAAD,IAAO;AAC/BF,IAAAA,QAAQ,CAAEM,IAAD,sBACFA,IADE;AAELI,MAAAA,UAAU,EAAER,CAAC,CAACG,MAAF,CAASM,KAAT,CAAe,CAAf;AAFP,MAAD,CAAR,CAD+B,CAK/B;AACA,GAND;;AAQA,QAAMC,KAAK,GAAG,MAAM;AACnBZ,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACA,GAFD;;AAIA,SAAO,CAAEC,QAAF,EAAYE,YAAZ,EAA0BM,iBAA1B,EAA6CK,KAA7C,EAAoDH,gBAApD,CAAP;AACA,CA/BD;;AAiCA,eAAeZ,aAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useInputState = (init) => {\r\n\tconst [ newValue, setValue ] = useState(init);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetValue((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\t[name]: value\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleQuillChange = (value) => {\r\n\t\tsetValue((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tdescription: value\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleFileChange = (e) => {\r\n\t\tsetValue((prev) => ({\r\n\t\t    ...prev,\r\n\t\t    projectImg: e.target.files[0]\r\n\t\t}))\r\n\t\t// setValue({ projectImg: e.target.files[0] });\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetValue(init);\r\n\t};\r\n\r\n\treturn [ newValue, handleChange, handleQuillChange, reset, handleFileChange ];\r\n};\r\n\r\nexport default useInputState;\r\n"]},"metadata":{},"sourceType":"module"}