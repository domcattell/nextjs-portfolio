{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { AuthContext, AuthActions } from '../context/contexts/auth.context';\nimport { useRouter } from 'next/router'; //a better approach to auth with next would be to use cookies\n//and check if authenticated on the serverside first without\n//using context, prevent a page flash, but for a personal project, this method fits fine\n\nconst WithAuth = AuthComponent => {\n  return () => {\n    const {\n      checkAuth\n    } = useContext(AuthActions);\n    const {\n      isAuthenticated\n    } = useContext(AuthContext);\n    const router = useRouter();\n    useEffect(() => {\n      checkAuth();\n      !isAuthenticated && router.replace('/admin');\n    }, []);\n    return __jsx(\"div\", null, isAuthenticated ? __jsx(AuthComponent, null) : __jsx(\"h4\", null, \"Access denied\"));\n  };\n};\n\nexport default WithAuth;","map":{"version":3,"sources":["C:/users/domin/documents/domcattell/site/HOC/auth.hoc.js"],"names":["React","useEffect","useContext","AuthContext","AuthActions","useRouter","WithAuth","AuthComponent","checkAuth","isAuthenticated","router","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kCAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AACnC,SAAO,MAAM;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAgBN,UAAU,CAACE,WAAD,CAAhC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAsBP,UAAU,CAACC,WAAD,CAAtC;AACA,UAAMO,MAAM,GAAGL,SAAS,EAAxB;AAEAJ,IAAAA,SAAS,CAAC,MAAM;AACfO,MAAAA,SAAS;AACT,OAACC,eAAD,IAAoBC,MAAM,CAACC,OAAP,CAAe,QAAf,CAApB;AACA,KAHQ,EAGN,EAHM,CAAT;AAKA,WAAO,mBAAMF,eAAe,GAAG,MAAC,aAAD,OAAH,GAAuB,kCAA5C,CAAP;AACA,GAXD;AAYA,CAbD;;AAeA,eAAeH,QAAf","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { AuthContext, AuthActions } from '../context/contexts/auth.context';\r\nimport { useRouter } from 'next/router';\r\n\r\n//a better approach to auth with next would be to use cookies\r\n//and check if authenticated on the serverside first without\r\n//using context, prevent a page flash, but for a personal project, this method fits fine\r\nconst WithAuth = (AuthComponent) => {\r\n\treturn () => {\r\n\t\tconst { checkAuth } = useContext(AuthActions);\r\n\t\tconst { isAuthenticated } = useContext(AuthContext);\r\n\t\tconst router = useRouter();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tcheckAuth();\r\n\t\t\t!isAuthenticated && router.replace('/admin');\r\n\t\t}, []);\r\n\r\n\t\treturn <div>{isAuthenticated ? <AuthComponent /> : <h4>Access denied</h4>}</div>;\r\n\t};\r\n};\r\n\r\nexport default WithAuth;\r\n"]},"metadata":{},"sourceType":"module"}