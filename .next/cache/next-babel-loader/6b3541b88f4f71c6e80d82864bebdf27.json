{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { Form, Modal, Button, Container } from 'react-bootstrap'; // import TextEditor from '../admin/TextEditor';\n\nvar ReactQuill = true ? require('react-quill') : function () {\n  return false;\n};\nimport useInputState from '../../hooks/useInputState';\nimport { ProjectsActions } from '../../context/contexts/projects.context';\n\nvar NewProjects = function NewProjects(props) {\n  var _useInputState = useInputState({}),\n      _useInputState2 = _slicedToArray(_useInputState, 5),\n      project = _useInputState2[0],\n      handleChange = _useInputState2[1],\n      handleDesc = _useInputState2[2],\n      resetForm = _useInputState2[3],\n      fileChange = _useInputState2[4];\n\n  var _useContext = useContext(ProjectsActions),\n      addProject = _useContext.addProject;\n\n  var _useState = useState([]),\n      file = _useState[0],\n      setFile = _useState[1];\n\n  var fileC = function fileC(e) {\n    setFile(e.target.files[0]);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var form_data = new FormData(newProjectForm);\n    form_data.set('description', project.description);\n    addProject(form_data);\n  };\n\n  console.log(project);\n  return __jsx(Modal, {\n    size: \"lg\",\n    show: props.show,\n    onHide: props.toggle,\n    centered: true,\n    style: {\n      zIndex: '9999'\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, {\n    id: \"example-modal-sizes-title-lg\"\n  }, \"New Portfolio Project\")), __jsx(Modal.Body, null, __jsx(Container, null, __jsx(Form, {\n    id: \"newProjectForm\",\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, null, __jsx(Form.Control, {\n    name: \"title\",\n    value: project.title || '',\n    onChange: handleChange,\n    type: \"text\",\n    placeholder: \"Title\"\n  })), __jsx(Form.Group, null, __jsx(Form.Control, {\n    name: \"code\",\n    value: project.code || '',\n    onChange: handleChange,\n    type: \"text\",\n    placeholder: \"Source Link\"\n  })), __jsx(Form.Group, null, __jsx(Form.Control, {\n    name: \"demo\",\n    value: project.demo || '',\n    onChange: handleChange,\n    type: \"text\",\n    placeholder: \"Demo Link\"\n  })), __jsx(Form.Group, null, __jsx(ReactQuill, {\n    value: project.description,\n    onChange: handleDesc\n  })), __jsx(Form.Group, null, __jsx(\"input\", {\n    type: \"file\",\n    name: \"projectImg\",\n    onChange: fileChange\n  })), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\"\n  }, \"Submit\")))));\n};\n\nexport default NewProjects;","map":{"version":3,"sources":["C:/Users/domin/Documents/domcattell/site/components/modals/NewProjects.js"],"names":["React","useContext","useState","Form","Modal","Button","Container","ReactQuill","require","useInputState","ProjectsActions","NewProjects","props","project","handleChange","handleDesc","resetForm","fileChange","addProject","file","setFile","fileC","e","target","files","handleSubmit","preventDefault","form_data","FormData","newProjectForm","set","description","console","log","show","toggle","zIndex","title","code","demo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,iBAA/C,C,CACA;;AACA,IAAMC,UAAU,GAAG,OAA6BC,OAAO,CAAC,aAAD,CAApC,GAAsD;AAAA,SAAM,KAAN;AAAA,CAAzE;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,eAAT,QAAgC,yCAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,uBACuCH,aAAa,CAAC,EAAD,CADpD;AAAA;AAAA,MACtBI,OADsB;AAAA,MACbC,YADa;AAAA,MACCC,UADD;AAAA,MACaC,SADb;AAAA,MACwBC,UADxB;;AAAA,oBAEPhB,UAAU,CAACS,eAAD,CAFH;AAAA,MAEtBQ,UAFsB,eAEtBA,UAFsB;;AAAA,kBAGNhB,QAAQ,CAAC,EAAD,CAHF;AAAA,MAGvBiB,IAHuB;AAAA,MAGjBC,OAHiB;;AAK9B,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAAO;AACpBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACA,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAO;AAC3BA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAMC,SAAS,GAAG,IAAIC,QAAJ,CAAaC,cAAb,CAAlB;AACAF,IAAAA,SAAS,CAACG,GAAV,CAAc,aAAd,EAA6BjB,OAAO,CAACkB,WAArC;AACAb,IAAAA,UAAU,CAACS,SAAD,CAAV;AACA,GALD;;AAOAK,EAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AAEA,SACC,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAED,KAAK,CAACsB,IAA7B;AAAmC,IAAA,MAAM,EAAEtB,KAAK,CAACuB,MAAjD;AAAyD,IAAA,QAAQ,MAAjE;AAAkE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAzE,KACC,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW;AAAzB,KACC,MAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC;AAAhB,6BADD,CADD,EAIC,MAAC,KAAD,CAAO,IAAP,QACC,MAAC,SAAD,QACC,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAA0B,IAAA,QAAQ,EAAEX;AAApC,KACC,MAAC,IAAD,CAAM,KAAN,QACC,MAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,KAAK,EAAEZ,OAAO,CAACwB,KAAR,IAAiB,EAFzB;AAGC,IAAA,QAAQ,EAAEvB,YAHX;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,WAAW,EAAC;AALb,IADD,CADD,EAWC,MAAC,IAAD,CAAM,KAAN,QACC,MAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,KAAK,EAAED,OAAO,CAACyB,IAAR,IAAgB,EAFxB;AAGC,IAAA,QAAQ,EAAExB,YAHX;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,WAAW,EAAC;AALb,IADD,CAXD,EAqBC,MAAC,IAAD,CAAM,KAAN,QACC,MAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,KAAK,EAAED,OAAO,CAAC0B,IAAR,IAAgB,EAFxB;AAGC,IAAA,QAAQ,EAAEzB,YAHX;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,WAAW,EAAC;AALb,IADD,CArBD,EA+BC,MAAC,IAAD,CAAM,KAAN,QACC,MAAC,UAAD;AAAY,IAAA,KAAK,EAAED,OAAO,CAACkB,WAA3B;AAAwC,IAAA,QAAQ,EAAEhB;AAAlD,IADD,CA/BD,EAoCC,MAAC,IAAD,CAAM,KAAN,QACC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAqC,IAAA,QAAQ,EAAEE;AAA/C,IADD,CApCD,EAwCC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC;AAA/B,cAxCD,CADD,CADD,CAJD,CADD;AAuDA,CAzED;;AA2EA,eAAeN,WAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Button, Container } from 'react-bootstrap';\r\n// import TextEditor from '../admin/TextEditor';\r\nconst ReactQuill = typeof window === 'object' ? require('react-quill') : () => false;\r\nimport useInputState from '../../hooks/useInputState';\r\nimport { ProjectsActions } from '../../context/contexts/projects.context';\r\n\r\nconst NewProjects = (props) => {\r\n\tconst [ project, handleChange, handleDesc, resetForm, fileChange ] = useInputState({});\r\n\tconst { addProject } = useContext(ProjectsActions);\r\n\tconst [file, setFile] = useState([]);\r\n\r\n\tconst fileC = (e) => {\r\n\t\tsetFile(e.target.files[0])\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst form_data = new FormData(newProjectForm);\r\n\t\tform_data.set('description', project.description);\r\n\t\taddProject(form_data);\r\n\t};\r\n\r\n\tconsole.log(project);\r\n\r\n\treturn (\r\n\t\t<Modal size=\"lg\" show={props.show} onHide={props.toggle} centered style={{ zIndex: '9999' }}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"example-modal-sizes-title-lg\">New Portfolio Project</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Form id=\"newProjectForm\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tvalue={project.title || ''}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"code\"\r\n\t\t\t\t\t\t\t\tvalue={project.code || ''}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Source Link\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"demo\"\r\n\t\t\t\t\t\t\t\tvalue={project.demo || ''}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Demo Link\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<ReactQuill value={project.description} onChange={handleDesc}/>\r\n\t\t\t\t\t\t\t{/* <TextEditor value={project.description || ''} onChange={handleDesc} /> */}\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<input type=\"file\" name=\"projectImg\" onChange={fileChange} />\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Container>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default NewProjects;\r\n"]},"metadata":{},"sourceType":"module"}